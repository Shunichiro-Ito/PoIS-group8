{"ast":null,"code":"import * as React from 'react';\nimport { useUtils } from './useUtils';\nimport { getMeridiem, convertToMeridiem } from '../utils/time-utils';\nexport function useNextMonthDisabled(month, {\n  disableFuture,\n  maxDate,\n  timezone\n}) {\n  const utils = useUtils();\n  return React.useMemo(() => {\n    const now = utils.date(undefined, timezone);\n    const lastEnabledMonth = utils.startOfMonth(disableFuture && utils.isBefore(now, maxDate) ? now : maxDate);\n    return !utils.isAfter(lastEnabledMonth, month);\n  }, [disableFuture, maxDate, month, utils, timezone]);\n}\nexport function usePreviousMonthDisabled(month, {\n  disablePast,\n  minDate,\n  timezone\n}) {\n  const utils = useUtils();\n  return React.useMemo(() => {\n    const now = utils.date(undefined, timezone);\n    const firstEnabledMonth = utils.startOfMonth(disablePast && utils.isAfter(now, minDate) ? now : minDate);\n    return !utils.isBefore(firstEnabledMonth, month);\n  }, [disablePast, minDate, month, utils, timezone]);\n}\nexport function useMeridiemMode(date, ampm, onChange, selectionState) {\n  const utils = useUtils();\n  const meridiemMode = getMeridiem(date, utils);\n  const handleMeridiemChange = React.useCallback(mode => {\n    const timeWithMeridiem = date == null ? null : convertToMeridiem(date, mode, Boolean(ampm), utils);\n    onChange(timeWithMeridiem, selectionState ?? 'partial');\n  }, [ampm, date, onChange, selectionState, utils]);\n  return {\n    meridiemMode,\n    handleMeridiemChange\n  };\n}","map":{"version":3,"names":["React","useUtils","getMeridiem","convertToMeridiem","useNextMonthDisabled","month","disableFuture","maxDate","timezone","utils","useMemo","now","date","undefined","lastEnabledMonth","startOfMonth","isBefore","isAfter","usePreviousMonthDisabled","disablePast","minDate","firstEnabledMonth","useMeridiemMode","ampm","onChange","selectionState","meridiemMode","handleMeridiemChange","useCallback","mode","timeWithMeridiem","Boolean"],"sources":["C:/Users/shun1/OneDrive/デスクトップ/React/mui-sample/node_modules/@mui/x-date-pickers/internals/hooks/date-helpers-hooks.js"],"sourcesContent":["import * as React from 'react';\nimport { useUtils } from './useUtils';\nimport { getMeridiem, convertToMeridiem } from '../utils/time-utils';\nexport function useNextMonthDisabled(month, {\n  disableFuture,\n  maxDate,\n  timezone\n}) {\n  const utils = useUtils();\n  return React.useMemo(() => {\n    const now = utils.date(undefined, timezone);\n    const lastEnabledMonth = utils.startOfMonth(disableFuture && utils.isBefore(now, maxDate) ? now : maxDate);\n    return !utils.isAfter(lastEnabledMonth, month);\n  }, [disableFuture, maxDate, month, utils, timezone]);\n}\nexport function usePreviousMonthDisabled(month, {\n  disablePast,\n  minDate,\n  timezone\n}) {\n  const utils = useUtils();\n  return React.useMemo(() => {\n    const now = utils.date(undefined, timezone);\n    const firstEnabledMonth = utils.startOfMonth(disablePast && utils.isAfter(now, minDate) ? now : minDate);\n    return !utils.isBefore(firstEnabledMonth, month);\n  }, [disablePast, minDate, month, utils, timezone]);\n}\nexport function useMeridiemMode(date, ampm, onChange, selectionState) {\n  const utils = useUtils();\n  const meridiemMode = getMeridiem(date, utils);\n  const handleMeridiemChange = React.useCallback(mode => {\n    const timeWithMeridiem = date == null ? null : convertToMeridiem(date, mode, Boolean(ampm), utils);\n    onChange(timeWithMeridiem, selectionState ?? 'partial');\n  }, [ampm, date, onChange, selectionState, utils]);\n  return {\n    meridiemMode,\n    handleMeridiemChange\n  };\n}"],"mappings":"AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAASC,QAAQ,QAAQ,YAAY;AACrC,SAASC,WAAW,EAAEC,iBAAiB,QAAQ,qBAAqB;AACpE,OAAO,SAASC,oBAAoBA,CAACC,KAAK,EAAE;EAC1CC,aAAa;EACbC,OAAO;EACPC;AACF,CAAC,EAAE;EACD,MAAMC,KAAK,GAAGR,QAAQ,CAAC,CAAC;EACxB,OAAOD,KAAK,CAACU,OAAO,CAAC,MAAM;IACzB,MAAMC,GAAG,GAAGF,KAAK,CAACG,IAAI,CAACC,SAAS,EAAEL,QAAQ,CAAC;IAC3C,MAAMM,gBAAgB,GAAGL,KAAK,CAACM,YAAY,CAACT,aAAa,IAAIG,KAAK,CAACO,QAAQ,CAACL,GAAG,EAAEJ,OAAO,CAAC,GAAGI,GAAG,GAAGJ,OAAO,CAAC;IAC1G,OAAO,CAACE,KAAK,CAACQ,OAAO,CAACH,gBAAgB,EAAET,KAAK,CAAC;EAChD,CAAC,EAAE,CAACC,aAAa,EAAEC,OAAO,EAAEF,KAAK,EAAEI,KAAK,EAAED,QAAQ,CAAC,CAAC;AACtD;AACA,OAAO,SAASU,wBAAwBA,CAACb,KAAK,EAAE;EAC9Cc,WAAW;EACXC,OAAO;EACPZ;AACF,CAAC,EAAE;EACD,MAAMC,KAAK,GAAGR,QAAQ,CAAC,CAAC;EACxB,OAAOD,KAAK,CAACU,OAAO,CAAC,MAAM;IACzB,MAAMC,GAAG,GAAGF,KAAK,CAACG,IAAI,CAACC,SAAS,EAAEL,QAAQ,CAAC;IAC3C,MAAMa,iBAAiB,GAAGZ,KAAK,CAACM,YAAY,CAACI,WAAW,IAAIV,KAAK,CAACQ,OAAO,CAACN,GAAG,EAAES,OAAO,CAAC,GAAGT,GAAG,GAAGS,OAAO,CAAC;IACxG,OAAO,CAACX,KAAK,CAACO,QAAQ,CAACK,iBAAiB,EAAEhB,KAAK,CAAC;EAClD,CAAC,EAAE,CAACc,WAAW,EAAEC,OAAO,EAAEf,KAAK,EAAEI,KAAK,EAAED,QAAQ,CAAC,CAAC;AACpD;AACA,OAAO,SAASc,eAAeA,CAACV,IAAI,EAAEW,IAAI,EAAEC,QAAQ,EAAEC,cAAc,EAAE;EACpE,MAAMhB,KAAK,GAAGR,QAAQ,CAAC,CAAC;EACxB,MAAMyB,YAAY,GAAGxB,WAAW,CAACU,IAAI,EAAEH,KAAK,CAAC;EAC7C,MAAMkB,oBAAoB,GAAG3B,KAAK,CAAC4B,WAAW,CAACC,IAAI,IAAI;IACrD,MAAMC,gBAAgB,GAAGlB,IAAI,IAAI,IAAI,GAAG,IAAI,GAAGT,iBAAiB,CAACS,IAAI,EAAEiB,IAAI,EAAEE,OAAO,CAACR,IAAI,CAAC,EAAEd,KAAK,CAAC;IAClGe,QAAQ,CAACM,gBAAgB,EAAEL,cAAc,IAAI,SAAS,CAAC;EACzD,CAAC,EAAE,CAACF,IAAI,EAAEX,IAAI,EAAEY,QAAQ,EAAEC,cAAc,EAAEhB,KAAK,CAAC,CAAC;EACjD,OAAO;IACLiB,YAAY;IACZC;EACF,CAAC;AACH","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}