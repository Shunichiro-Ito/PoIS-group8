{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"PaperComponent\", \"popperPlacement\", \"ownerState\", \"children\", \"paperSlotProps\", \"paperClasses\", \"onPaperClick\", \"onPaperTouchStart\"];\nimport * as React from 'react';\nimport { useSlotProps } from '@mui/base/utils';\nimport Grow from '@mui/material/Grow';\nimport Fade from '@mui/material/Fade';\nimport MuiPaper from '@mui/material/Paper';\nimport MuiPopper from '@mui/material/Popper';\nimport BaseFocusTrap from '@mui/material/Unstable_TrapFocus';\nimport { unstable_useForkRef as useForkRef, unstable_useEventCallback as useEventCallback, unstable_ownerDocument as ownerDocument, unstable_composeClasses as composeClasses } from '@mui/utils';\nimport { styled, useThemeProps } from '@mui/material/styles';\nimport { getPickersPopperUtilityClass } from './pickersPopperClasses';\nimport { getActiveElement } from '../utils/utils';\nimport { useDefaultReduceAnimations } from '../hooks/useDefaultReduceAnimations';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root'],\n    paper: ['paper']\n  };\n  return composeClasses(slots, getPickersPopperUtilityClass, classes);\n};\nconst PickersPopperRoot = styled(MuiPopper, {\n  name: 'MuiPickersPopper',\n  slot: 'Root',\n  overridesResolver: (_, styles) => styles.root\n})(({\n  theme\n}) => ({\n  zIndex: theme.zIndex.modal\n}));\nconst PickersPopperPaper = styled(MuiPaper, {\n  name: 'MuiPickersPopper',\n  slot: 'Paper',\n  overridesResolver: (_, styles) => styles.paper\n})({\n  outline: 0,\n  transformOrigin: 'top center',\n  variants: [{\n    props: ({\n      placement\n    }) => ['top', 'top-start', 'top-end'].includes(placement),\n    style: {\n      transformOrigin: 'bottom center'\n    }\n  }]\n});\nfunction clickedRootScrollbar(event, doc) {\n  return doc.documentElement.clientWidth < event.clientX || doc.documentElement.clientHeight < event.clientY;\n}\n/**\n * Based on @mui/material/ClickAwayListener without the customization.\n * We can probably strip away even more since children won't be portaled.\n * @param {boolean} active Only listen to clicks when the popper is opened.\n * @param {(event: MouseEvent | TouchEvent) => void} onClickAway The callback to call when clicking outside the popper.\n * @returns {Array} The ref and event handler to listen to the outside clicks.\n */\nfunction useClickAwayListener(active, onClickAway) {\n  const movedRef = React.useRef(false);\n  const syntheticEventRef = React.useRef(false);\n  const nodeRef = React.useRef(null);\n  const activatedRef = React.useRef(false);\n  React.useEffect(() => {\n    if (!active) {\n      return undefined;\n    }\n\n    // Ensure that this hook is not \"activated\" synchronously.\n    // https://github.com/facebook/react/issues/20074\n    function armClickAwayListener() {\n      activatedRef.current = true;\n    }\n    document.addEventListener('mousedown', armClickAwayListener, true);\n    document.addEventListener('touchstart', armClickAwayListener, true);\n    return () => {\n      document.removeEventListener('mousedown', armClickAwayListener, true);\n      document.removeEventListener('touchstart', armClickAwayListener, true);\n      activatedRef.current = false;\n    };\n  }, [active]);\n\n  // The handler doesn't take event.defaultPrevented into account:\n  //\n  // event.preventDefault() is meant to stop default behaviors like\n  // clicking a checkbox to check it, hitting a button to submit a form,\n  // and hitting left arrow to move the cursor in a text input etc.\n  // Only special HTML elements have these default behaviors.\n  const handleClickAway = useEventCallback(event => {\n    if (!activatedRef.current) {\n      return;\n    }\n\n    // Given developers can stop the propagation of the synthetic event,\n    // we can only be confident with a positive value.\n    const insideReactTree = syntheticEventRef.current;\n    syntheticEventRef.current = false;\n    const doc = ownerDocument(nodeRef.current);\n\n    // 1. IE11 support, which trigger the handleClickAway even after the unbind\n    // 2. The child might render null.\n    // 3. Behave like a blur listener.\n    if (!nodeRef.current ||\n    // is a TouchEvent?\n    'clientX' in event && clickedRootScrollbar(event, doc)) {\n      return;\n    }\n\n    // Do not act if user performed touchmove\n    if (movedRef.current) {\n      movedRef.current = false;\n      return;\n    }\n    let insideDOM;\n\n    // If not enough, can use https://github.com/DieterHolvoet/event-propagation-path/blob/master/propagationPath.js\n    if (event.composedPath) {\n      insideDOM = event.composedPath().indexOf(nodeRef.current) > -1;\n    } else {\n      insideDOM = !doc.documentElement.contains(event.target) || nodeRef.current.contains(event.target);\n    }\n    if (!insideDOM && !insideReactTree) {\n      onClickAway(event);\n    }\n  });\n\n  // Keep track of mouse/touch events that bubbled up through the portal.\n  const handleSynthetic = () => {\n    syntheticEventRef.current = true;\n  };\n  React.useEffect(() => {\n    if (active) {\n      const doc = ownerDocument(nodeRef.current);\n      const handleTouchMove = () => {\n        movedRef.current = true;\n      };\n      doc.addEventListener('touchstart', handleClickAway);\n      doc.addEventListener('touchmove', handleTouchMove);\n      return () => {\n        doc.removeEventListener('touchstart', handleClickAway);\n        doc.removeEventListener('touchmove', handleTouchMove);\n      };\n    }\n    return undefined;\n  }, [active, handleClickAway]);\n  React.useEffect(() => {\n    // TODO This behavior is not tested automatically\n    // It's unclear whether this is due to different update semantics in test (batched in act() vs discrete on click).\n    // Or if this is a timing related issues due to different Transition components\n    // Once we get rid of all the manual scheduling (for example setTimeout(update, 0)) we can revisit this code+test.\n    if (active) {\n      const doc = ownerDocument(nodeRef.current);\n      doc.addEventListener('click', handleClickAway);\n      return () => {\n        doc.removeEventListener('click', handleClickAway);\n        // cleanup `handleClickAway`\n        syntheticEventRef.current = false;\n      };\n    }\n    return undefined;\n  }, [active, handleClickAway]);\n  return [nodeRef, handleSynthetic, handleSynthetic];\n}\nconst PickersPopperPaperWrapper = /*#__PURE__*/React.forwardRef((props, ref) => {\n  const {\n      PaperComponent,\n      popperPlacement,\n      ownerState: inOwnerState,\n      children,\n      paperSlotProps,\n      paperClasses,\n      onPaperClick,\n      onPaperTouchStart\n      // picks up the style props provided by `Transition`\n      // https://mui.com/material-ui/transitions/#child-requirement\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, inOwnerState, {\n    placement: popperPlacement\n  });\n  const paperProps = useSlotProps({\n    elementType: PaperComponent,\n    externalSlotProps: paperSlotProps,\n    additionalProps: {\n      tabIndex: -1,\n      elevation: 8,\n      ref\n    },\n    className: paperClasses,\n    ownerState\n  });\n  return /*#__PURE__*/_jsx(PaperComponent, _extends({}, other, paperProps, {\n    onClick: event => {\n      onPaperClick(event);\n      paperProps.onClick?.(event);\n    },\n    onTouchStart: event => {\n      onPaperTouchStart(event);\n      paperProps.onTouchStart?.(event);\n    },\n    ownerState: ownerState,\n    children: children\n  }));\n});\nexport function PickersPopper(inProps) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiPickersPopper'\n  });\n  const {\n    anchorEl,\n    children,\n    containerRef = null,\n    shouldRestoreFocus,\n    onBlur,\n    onDismiss,\n    open,\n    role,\n    placement,\n    slots,\n    slotProps,\n    reduceAnimations: inReduceAnimations\n  } = props;\n  React.useEffect(() => {\n    function handleKeyDown(nativeEvent) {\n      if (open && nativeEvent.key === 'Escape') {\n        onDismiss();\n      }\n    }\n    document.addEventListener('keydown', handleKeyDown);\n    return () => {\n      document.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [onDismiss, open]);\n  const lastFocusedElementRef = React.useRef(null);\n  React.useEffect(() => {\n    if (role === 'tooltip' || shouldRestoreFocus && !shouldRestoreFocus()) {\n      return;\n    }\n    if (open) {\n      lastFocusedElementRef.current = getActiveElement(document);\n    } else if (lastFocusedElementRef.current && lastFocusedElementRef.current instanceof HTMLElement) {\n      // make sure the button is flushed with updated label, before returning focus to it\n      // avoids issue, where screen reader could fail to announce selected date after selection\n      setTimeout(() => {\n        if (lastFocusedElementRef.current instanceof HTMLElement) {\n          lastFocusedElementRef.current.focus();\n        }\n      });\n    }\n  }, [open, role, shouldRestoreFocus]);\n  const [clickAwayRef, onPaperClick, onPaperTouchStart] = useClickAwayListener(open, onBlur ?? onDismiss);\n  const paperRef = React.useRef(null);\n  const handleRef = useForkRef(paperRef, containerRef);\n  const handlePaperRef = useForkRef(handleRef, clickAwayRef);\n  const ownerState = props;\n  const classes = useUtilityClasses(ownerState);\n  const defaultReduceAnimations = useDefaultReduceAnimations();\n  const reduceAnimations = inReduceAnimations ?? defaultReduceAnimations;\n  const handleKeyDown = event => {\n    if (event.key === 'Escape') {\n      // stop the propagation to avoid closing parent modal\n      event.stopPropagation();\n      onDismiss();\n    }\n  };\n  const Transition = slots?.desktopTransition ?? reduceAnimations ? Fade : Grow;\n  const FocusTrap = slots?.desktopTrapFocus ?? BaseFocusTrap;\n  const Paper = slots?.desktopPaper ?? PickersPopperPaper;\n  const Popper = slots?.popper ?? PickersPopperRoot;\n  const popperProps = useSlotProps({\n    elementType: Popper,\n    externalSlotProps: slotProps?.popper,\n    additionalProps: {\n      transition: true,\n      role,\n      open,\n      anchorEl,\n      placement,\n      onKeyDown: handleKeyDown\n    },\n    className: classes.root,\n    ownerState: props\n  });\n  return /*#__PURE__*/_jsx(Popper, _extends({}, popperProps, {\n    children: ({\n      TransitionProps,\n      placement: popperPlacement\n    }) => /*#__PURE__*/_jsx(FocusTrap, _extends({\n      open: open,\n      disableAutoFocus: true\n      // pickers are managing focus position manually\n      // without this prop the focus is returned to the button before `aria-label` is updated\n      // which would force screen readers to read too old label\n      ,\n\n      disableRestoreFocus: true,\n      disableEnforceFocus: role === 'tooltip',\n      isEnabled: () => true\n    }, slotProps?.desktopTrapFocus, {\n      children: /*#__PURE__*/_jsx(Transition, _extends({}, TransitionProps, slotProps?.desktopTransition, {\n        children: /*#__PURE__*/_jsx(PickersPopperPaperWrapper, {\n          PaperComponent: Paper,\n          ownerState: ownerState,\n          popperPlacement: popperPlacement,\n          ref: handlePaperRef,\n          onPaperClick: onPaperClick,\n          onPaperTouchStart: onPaperTouchStart,\n          paperClasses: classes.paper,\n          paperSlotProps: slotProps?.desktopPaper,\n          children: children\n        })\n      }))\n    }))\n  }));\n}","map":{"version":3,"names":["_extends","_objectWithoutPropertiesLoose","_excluded","React","useSlotProps","Grow","Fade","MuiPaper","MuiPopper","BaseFocusTrap","unstable_useForkRef","useForkRef","unstable_useEventCallback","useEventCallback","unstable_ownerDocument","ownerDocument","unstable_composeClasses","composeClasses","styled","useThemeProps","getPickersPopperUtilityClass","getActiveElement","useDefaultReduceAnimations","jsx","_jsx","useUtilityClasses","ownerState","classes","slots","root","paper","PickersPopperRoot","name","slot","overridesResolver","_","styles","theme","zIndex","modal","PickersPopperPaper","outline","transformOrigin","variants","props","placement","includes","style","clickedRootScrollbar","event","doc","documentElement","clientWidth","clientX","clientHeight","clientY","useClickAwayListener","active","onClickAway","movedRef","useRef","syntheticEventRef","nodeRef","activatedRef","useEffect","undefined","armClickAwayListener","current","document","addEventListener","removeEventListener","handleClickAway","insideReactTree","insideDOM","composedPath","indexOf","contains","target","handleSynthetic","handleTouchMove","PickersPopperPaperWrapper","forwardRef","ref","PaperComponent","popperPlacement","inOwnerState","children","paperSlotProps","paperClasses","onPaperClick","onPaperTouchStart","other","paperProps","elementType","externalSlotProps","additionalProps","tabIndex","elevation","className","onClick","onTouchStart","PickersPopper","inProps","anchorEl","containerRef","shouldRestoreFocus","onBlur","onDismiss","open","role","slotProps","reduceAnimations","inReduceAnimations","handleKeyDown","nativeEvent","key","lastFocusedElementRef","HTMLElement","setTimeout","focus","clickAwayRef","paperRef","handleRef","handlePaperRef","defaultReduceAnimations","stopPropagation","Transition","desktopTransition","FocusTrap","desktopTrapFocus","Paper","desktopPaper","Popper","popper","popperProps","transition","onKeyDown","TransitionProps","disableAutoFocus","disableRestoreFocus","disableEnforceFocus","isEnabled"],"sources":["C:/Users/shun1/OneDrive/デスクトップ/React/mui-sample/node_modules/@mui/x-date-pickers/internals/components/PickersPopper.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"PaperComponent\", \"popperPlacement\", \"ownerState\", \"children\", \"paperSlotProps\", \"paperClasses\", \"onPaperClick\", \"onPaperTouchStart\"];\nimport * as React from 'react';\nimport { useSlotProps } from '@mui/base/utils';\nimport Grow from '@mui/material/Grow';\nimport Fade from '@mui/material/Fade';\nimport MuiPaper from '@mui/material/Paper';\nimport MuiPopper from '@mui/material/Popper';\nimport BaseFocusTrap from '@mui/material/Unstable_TrapFocus';\nimport { unstable_useForkRef as useForkRef, unstable_useEventCallback as useEventCallback, unstable_ownerDocument as ownerDocument, unstable_composeClasses as composeClasses } from '@mui/utils';\nimport { styled, useThemeProps } from '@mui/material/styles';\nimport { getPickersPopperUtilityClass } from './pickersPopperClasses';\nimport { getActiveElement } from '../utils/utils';\nimport { useDefaultReduceAnimations } from '../hooks/useDefaultReduceAnimations';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root'],\n    paper: ['paper']\n  };\n  return composeClasses(slots, getPickersPopperUtilityClass, classes);\n};\nconst PickersPopperRoot = styled(MuiPopper, {\n  name: 'MuiPickersPopper',\n  slot: 'Root',\n  overridesResolver: (_, styles) => styles.root\n})(({\n  theme\n}) => ({\n  zIndex: theme.zIndex.modal\n}));\nconst PickersPopperPaper = styled(MuiPaper, {\n  name: 'MuiPickersPopper',\n  slot: 'Paper',\n  overridesResolver: (_, styles) => styles.paper\n})({\n  outline: 0,\n  transformOrigin: 'top center',\n  variants: [{\n    props: ({\n      placement\n    }) => ['top', 'top-start', 'top-end'].includes(placement),\n    style: {\n      transformOrigin: 'bottom center'\n    }\n  }]\n});\nfunction clickedRootScrollbar(event, doc) {\n  return doc.documentElement.clientWidth < event.clientX || doc.documentElement.clientHeight < event.clientY;\n}\n/**\n * Based on @mui/material/ClickAwayListener without the customization.\n * We can probably strip away even more since children won't be portaled.\n * @param {boolean} active Only listen to clicks when the popper is opened.\n * @param {(event: MouseEvent | TouchEvent) => void} onClickAway The callback to call when clicking outside the popper.\n * @returns {Array} The ref and event handler to listen to the outside clicks.\n */\nfunction useClickAwayListener(active, onClickAway) {\n  const movedRef = React.useRef(false);\n  const syntheticEventRef = React.useRef(false);\n  const nodeRef = React.useRef(null);\n  const activatedRef = React.useRef(false);\n  React.useEffect(() => {\n    if (!active) {\n      return undefined;\n    }\n\n    // Ensure that this hook is not \"activated\" synchronously.\n    // https://github.com/facebook/react/issues/20074\n    function armClickAwayListener() {\n      activatedRef.current = true;\n    }\n    document.addEventListener('mousedown', armClickAwayListener, true);\n    document.addEventListener('touchstart', armClickAwayListener, true);\n    return () => {\n      document.removeEventListener('mousedown', armClickAwayListener, true);\n      document.removeEventListener('touchstart', armClickAwayListener, true);\n      activatedRef.current = false;\n    };\n  }, [active]);\n\n  // The handler doesn't take event.defaultPrevented into account:\n  //\n  // event.preventDefault() is meant to stop default behaviors like\n  // clicking a checkbox to check it, hitting a button to submit a form,\n  // and hitting left arrow to move the cursor in a text input etc.\n  // Only special HTML elements have these default behaviors.\n  const handleClickAway = useEventCallback(event => {\n    if (!activatedRef.current) {\n      return;\n    }\n\n    // Given developers can stop the propagation of the synthetic event,\n    // we can only be confident with a positive value.\n    const insideReactTree = syntheticEventRef.current;\n    syntheticEventRef.current = false;\n    const doc = ownerDocument(nodeRef.current);\n\n    // 1. IE11 support, which trigger the handleClickAway even after the unbind\n    // 2. The child might render null.\n    // 3. Behave like a blur listener.\n    if (!nodeRef.current ||\n    // is a TouchEvent?\n    'clientX' in event && clickedRootScrollbar(event, doc)) {\n      return;\n    }\n\n    // Do not act if user performed touchmove\n    if (movedRef.current) {\n      movedRef.current = false;\n      return;\n    }\n    let insideDOM;\n\n    // If not enough, can use https://github.com/DieterHolvoet/event-propagation-path/blob/master/propagationPath.js\n    if (event.composedPath) {\n      insideDOM = event.composedPath().indexOf(nodeRef.current) > -1;\n    } else {\n      insideDOM = !doc.documentElement.contains(event.target) || nodeRef.current.contains(event.target);\n    }\n    if (!insideDOM && !insideReactTree) {\n      onClickAway(event);\n    }\n  });\n\n  // Keep track of mouse/touch events that bubbled up through the portal.\n  const handleSynthetic = () => {\n    syntheticEventRef.current = true;\n  };\n  React.useEffect(() => {\n    if (active) {\n      const doc = ownerDocument(nodeRef.current);\n      const handleTouchMove = () => {\n        movedRef.current = true;\n      };\n      doc.addEventListener('touchstart', handleClickAway);\n      doc.addEventListener('touchmove', handleTouchMove);\n      return () => {\n        doc.removeEventListener('touchstart', handleClickAway);\n        doc.removeEventListener('touchmove', handleTouchMove);\n      };\n    }\n    return undefined;\n  }, [active, handleClickAway]);\n  React.useEffect(() => {\n    // TODO This behavior is not tested automatically\n    // It's unclear whether this is due to different update semantics in test (batched in act() vs discrete on click).\n    // Or if this is a timing related issues due to different Transition components\n    // Once we get rid of all the manual scheduling (for example setTimeout(update, 0)) we can revisit this code+test.\n    if (active) {\n      const doc = ownerDocument(nodeRef.current);\n      doc.addEventListener('click', handleClickAway);\n      return () => {\n        doc.removeEventListener('click', handleClickAway);\n        // cleanup `handleClickAway`\n        syntheticEventRef.current = false;\n      };\n    }\n    return undefined;\n  }, [active, handleClickAway]);\n  return [nodeRef, handleSynthetic, handleSynthetic];\n}\nconst PickersPopperPaperWrapper = /*#__PURE__*/React.forwardRef((props, ref) => {\n  const {\n      PaperComponent,\n      popperPlacement,\n      ownerState: inOwnerState,\n      children,\n      paperSlotProps,\n      paperClasses,\n      onPaperClick,\n      onPaperTouchStart\n      // picks up the style props provided by `Transition`\n      // https://mui.com/material-ui/transitions/#child-requirement\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, inOwnerState, {\n    placement: popperPlacement\n  });\n  const paperProps = useSlotProps({\n    elementType: PaperComponent,\n    externalSlotProps: paperSlotProps,\n    additionalProps: {\n      tabIndex: -1,\n      elevation: 8,\n      ref\n    },\n    className: paperClasses,\n    ownerState\n  });\n  return /*#__PURE__*/_jsx(PaperComponent, _extends({}, other, paperProps, {\n    onClick: event => {\n      onPaperClick(event);\n      paperProps.onClick?.(event);\n    },\n    onTouchStart: event => {\n      onPaperTouchStart(event);\n      paperProps.onTouchStart?.(event);\n    },\n    ownerState: ownerState,\n    children: children\n  }));\n});\nexport function PickersPopper(inProps) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiPickersPopper'\n  });\n  const {\n    anchorEl,\n    children,\n    containerRef = null,\n    shouldRestoreFocus,\n    onBlur,\n    onDismiss,\n    open,\n    role,\n    placement,\n    slots,\n    slotProps,\n    reduceAnimations: inReduceAnimations\n  } = props;\n  React.useEffect(() => {\n    function handleKeyDown(nativeEvent) {\n      if (open && nativeEvent.key === 'Escape') {\n        onDismiss();\n      }\n    }\n    document.addEventListener('keydown', handleKeyDown);\n    return () => {\n      document.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [onDismiss, open]);\n  const lastFocusedElementRef = React.useRef(null);\n  React.useEffect(() => {\n    if (role === 'tooltip' || shouldRestoreFocus && !shouldRestoreFocus()) {\n      return;\n    }\n    if (open) {\n      lastFocusedElementRef.current = getActiveElement(document);\n    } else if (lastFocusedElementRef.current && lastFocusedElementRef.current instanceof HTMLElement) {\n      // make sure the button is flushed with updated label, before returning focus to it\n      // avoids issue, where screen reader could fail to announce selected date after selection\n      setTimeout(() => {\n        if (lastFocusedElementRef.current instanceof HTMLElement) {\n          lastFocusedElementRef.current.focus();\n        }\n      });\n    }\n  }, [open, role, shouldRestoreFocus]);\n  const [clickAwayRef, onPaperClick, onPaperTouchStart] = useClickAwayListener(open, onBlur ?? onDismiss);\n  const paperRef = React.useRef(null);\n  const handleRef = useForkRef(paperRef, containerRef);\n  const handlePaperRef = useForkRef(handleRef, clickAwayRef);\n  const ownerState = props;\n  const classes = useUtilityClasses(ownerState);\n  const defaultReduceAnimations = useDefaultReduceAnimations();\n  const reduceAnimations = inReduceAnimations ?? defaultReduceAnimations;\n  const handleKeyDown = event => {\n    if (event.key === 'Escape') {\n      // stop the propagation to avoid closing parent modal\n      event.stopPropagation();\n      onDismiss();\n    }\n  };\n  const Transition = slots?.desktopTransition ?? reduceAnimations ? Fade : Grow;\n  const FocusTrap = slots?.desktopTrapFocus ?? BaseFocusTrap;\n  const Paper = slots?.desktopPaper ?? PickersPopperPaper;\n  const Popper = slots?.popper ?? PickersPopperRoot;\n  const popperProps = useSlotProps({\n    elementType: Popper,\n    externalSlotProps: slotProps?.popper,\n    additionalProps: {\n      transition: true,\n      role,\n      open,\n      anchorEl,\n      placement,\n      onKeyDown: handleKeyDown\n    },\n    className: classes.root,\n    ownerState: props\n  });\n  return /*#__PURE__*/_jsx(Popper, _extends({}, popperProps, {\n    children: ({\n      TransitionProps,\n      placement: popperPlacement\n    }) => /*#__PURE__*/_jsx(FocusTrap, _extends({\n      open: open,\n      disableAutoFocus: true\n      // pickers are managing focus position manually\n      // without this prop the focus is returned to the button before `aria-label` is updated\n      // which would force screen readers to read too old label\n      ,\n      disableRestoreFocus: true,\n      disableEnforceFocus: role === 'tooltip',\n      isEnabled: () => true\n    }, slotProps?.desktopTrapFocus, {\n      children: /*#__PURE__*/_jsx(Transition, _extends({}, TransitionProps, slotProps?.desktopTransition, {\n        children: /*#__PURE__*/_jsx(PickersPopperPaperWrapper, {\n          PaperComponent: Paper,\n          ownerState: ownerState,\n          popperPlacement: popperPlacement,\n          ref: handlePaperRef,\n          onPaperClick: onPaperClick,\n          onPaperTouchStart: onPaperTouchStart,\n          paperClasses: classes.paper,\n          paperSlotProps: slotProps?.desktopPaper,\n          children: children\n        })\n      }))\n    }))\n  }));\n}"],"mappings":"AAAA,OAAOA,QAAQ,MAAM,oCAAoC;AACzD,OAAOC,6BAA6B,MAAM,yDAAyD;AACnG,MAAMC,SAAS,GAAG,CAAC,gBAAgB,EAAE,iBAAiB,EAAE,YAAY,EAAE,UAAU,EAAE,gBAAgB,EAAE,cAAc,EAAE,cAAc,EAAE,mBAAmB,CAAC;AACxJ,OAAO,KAAKC,KAAK,MAAM,OAAO;AAC9B,SAASC,YAAY,QAAQ,iBAAiB;AAC9C,OAAOC,IAAI,MAAM,oBAAoB;AACrC,OAAOC,IAAI,MAAM,oBAAoB;AACrC,OAAOC,QAAQ,MAAM,qBAAqB;AAC1C,OAAOC,SAAS,MAAM,sBAAsB;AAC5C,OAAOC,aAAa,MAAM,kCAAkC;AAC5D,SAASC,mBAAmB,IAAIC,UAAU,EAAEC,yBAAyB,IAAIC,gBAAgB,EAAEC,sBAAsB,IAAIC,aAAa,EAAEC,uBAAuB,IAAIC,cAAc,QAAQ,YAAY;AACjM,SAASC,MAAM,EAAEC,aAAa,QAAQ,sBAAsB;AAC5D,SAASC,4BAA4B,QAAQ,wBAAwB;AACrE,SAASC,gBAAgB,QAAQ,gBAAgB;AACjD,SAASC,0BAA0B,QAAQ,qCAAqC;AAChF,SAASC,GAAG,IAAIC,IAAI,QAAQ,mBAAmB;AAC/C,MAAMC,iBAAiB,GAAGC,UAAU,IAAI;EACtC,MAAM;IACJC;EACF,CAAC,GAAGD,UAAU;EACd,MAAME,KAAK,GAAG;IACZC,IAAI,EAAE,CAAC,MAAM,CAAC;IACdC,KAAK,EAAE,CAAC,OAAO;EACjB,CAAC;EACD,OAAOb,cAAc,CAACW,KAAK,EAAER,4BAA4B,EAAEO,OAAO,CAAC;AACrE,CAAC;AACD,MAAMI,iBAAiB,GAAGb,MAAM,CAACV,SAAS,EAAE;EAC1CwB,IAAI,EAAE,kBAAkB;EACxBC,IAAI,EAAE,MAAM;EACZC,iBAAiB,EAAEA,CAACC,CAAC,EAAEC,MAAM,KAAKA,MAAM,CAACP;AAC3C,CAAC,CAAC,CAAC,CAAC;EACFQ;AACF,CAAC,MAAM;EACLC,MAAM,EAAED,KAAK,CAACC,MAAM,CAACC;AACvB,CAAC,CAAC,CAAC;AACH,MAAMC,kBAAkB,GAAGtB,MAAM,CAACX,QAAQ,EAAE;EAC1CyB,IAAI,EAAE,kBAAkB;EACxBC,IAAI,EAAE,OAAO;EACbC,iBAAiB,EAAEA,CAACC,CAAC,EAAEC,MAAM,KAAKA,MAAM,CAACN;AAC3C,CAAC,CAAC,CAAC;EACDW,OAAO,EAAE,CAAC;EACVC,eAAe,EAAE,YAAY;EAC7BC,QAAQ,EAAE,CAAC;IACTC,KAAK,EAAEA,CAAC;MACNC;IACF,CAAC,KAAK,CAAC,KAAK,EAAE,WAAW,EAAE,SAAS,CAAC,CAACC,QAAQ,CAACD,SAAS,CAAC;IACzDE,KAAK,EAAE;MACLL,eAAe,EAAE;IACnB;EACF,CAAC;AACH,CAAC,CAAC;AACF,SAASM,oBAAoBA,CAACC,KAAK,EAAEC,GAAG,EAAE;EACxC,OAAOA,GAAG,CAACC,eAAe,CAACC,WAAW,GAAGH,KAAK,CAACI,OAAO,IAAIH,GAAG,CAACC,eAAe,CAACG,YAAY,GAAGL,KAAK,CAACM,OAAO;AAC5G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,oBAAoBA,CAACC,MAAM,EAAEC,WAAW,EAAE;EACjD,MAAMC,QAAQ,GAAGxD,KAAK,CAACyD,MAAM,CAAC,KAAK,CAAC;EACpC,MAAMC,iBAAiB,GAAG1D,KAAK,CAACyD,MAAM,CAAC,KAAK,CAAC;EAC7C,MAAME,OAAO,GAAG3D,KAAK,CAACyD,MAAM,CAAC,IAAI,CAAC;EAClC,MAAMG,YAAY,GAAG5D,KAAK,CAACyD,MAAM,CAAC,KAAK,CAAC;EACxCzD,KAAK,CAAC6D,SAAS,CAAC,MAAM;IACpB,IAAI,CAACP,MAAM,EAAE;MACX,OAAOQ,SAAS;IAClB;;IAEA;IACA;IACA,SAASC,oBAAoBA,CAAA,EAAG;MAC9BH,YAAY,CAACI,OAAO,GAAG,IAAI;IAC7B;IACAC,QAAQ,CAACC,gBAAgB,CAAC,WAAW,EAAEH,oBAAoB,EAAE,IAAI,CAAC;IAClEE,QAAQ,CAACC,gBAAgB,CAAC,YAAY,EAAEH,oBAAoB,EAAE,IAAI,CAAC;IACnE,OAAO,MAAM;MACXE,QAAQ,CAACE,mBAAmB,CAAC,WAAW,EAAEJ,oBAAoB,EAAE,IAAI,CAAC;MACrEE,QAAQ,CAACE,mBAAmB,CAAC,YAAY,EAAEJ,oBAAoB,EAAE,IAAI,CAAC;MACtEH,YAAY,CAACI,OAAO,GAAG,KAAK;IAC9B,CAAC;EACH,CAAC,EAAE,CAACV,MAAM,CAAC,CAAC;;EAEZ;EACA;EACA;EACA;EACA;EACA;EACA,MAAMc,eAAe,GAAG1D,gBAAgB,CAACoC,KAAK,IAAI;IAChD,IAAI,CAACc,YAAY,CAACI,OAAO,EAAE;MACzB;IACF;;IAEA;IACA;IACA,MAAMK,eAAe,GAAGX,iBAAiB,CAACM,OAAO;IACjDN,iBAAiB,CAACM,OAAO,GAAG,KAAK;IACjC,MAAMjB,GAAG,GAAGnC,aAAa,CAAC+C,OAAO,CAACK,OAAO,CAAC;;IAE1C;IACA;IACA;IACA,IAAI,CAACL,OAAO,CAACK,OAAO;IACpB;IACA,SAAS,IAAIlB,KAAK,IAAID,oBAAoB,CAACC,KAAK,EAAEC,GAAG,CAAC,EAAE;MACtD;IACF;;IAEA;IACA,IAAIS,QAAQ,CAACQ,OAAO,EAAE;MACpBR,QAAQ,CAACQ,OAAO,GAAG,KAAK;MACxB;IACF;IACA,IAAIM,SAAS;;IAEb;IACA,IAAIxB,KAAK,CAACyB,YAAY,EAAE;MACtBD,SAAS,GAAGxB,KAAK,CAACyB,YAAY,CAAC,CAAC,CAACC,OAAO,CAACb,OAAO,CAACK,OAAO,CAAC,GAAG,CAAC,CAAC;IAChE,CAAC,MAAM;MACLM,SAAS,GAAG,CAACvB,GAAG,CAACC,eAAe,CAACyB,QAAQ,CAAC3B,KAAK,CAAC4B,MAAM,CAAC,IAAIf,OAAO,CAACK,OAAO,CAACS,QAAQ,CAAC3B,KAAK,CAAC4B,MAAM,CAAC;IACnG;IACA,IAAI,CAACJ,SAAS,IAAI,CAACD,eAAe,EAAE;MAClCd,WAAW,CAACT,KAAK,CAAC;IACpB;EACF,CAAC,CAAC;;EAEF;EACA,MAAM6B,eAAe,GAAGA,CAAA,KAAM;IAC5BjB,iBAAiB,CAACM,OAAO,GAAG,IAAI;EAClC,CAAC;EACDhE,KAAK,CAAC6D,SAAS,CAAC,MAAM;IACpB,IAAIP,MAAM,EAAE;MACV,MAAMP,GAAG,GAAGnC,aAAa,CAAC+C,OAAO,CAACK,OAAO,CAAC;MAC1C,MAAMY,eAAe,GAAGA,CAAA,KAAM;QAC5BpB,QAAQ,CAACQ,OAAO,GAAG,IAAI;MACzB,CAAC;MACDjB,GAAG,CAACmB,gBAAgB,CAAC,YAAY,EAAEE,eAAe,CAAC;MACnDrB,GAAG,CAACmB,gBAAgB,CAAC,WAAW,EAAEU,eAAe,CAAC;MAClD,OAAO,MAAM;QACX7B,GAAG,CAACoB,mBAAmB,CAAC,YAAY,EAAEC,eAAe,CAAC;QACtDrB,GAAG,CAACoB,mBAAmB,CAAC,WAAW,EAAES,eAAe,CAAC;MACvD,CAAC;IACH;IACA,OAAOd,SAAS;EAClB,CAAC,EAAE,CAACR,MAAM,EAAEc,eAAe,CAAC,CAAC;EAC7BpE,KAAK,CAAC6D,SAAS,CAAC,MAAM;IACpB;IACA;IACA;IACA;IACA,IAAIP,MAAM,EAAE;MACV,MAAMP,GAAG,GAAGnC,aAAa,CAAC+C,OAAO,CAACK,OAAO,CAAC;MAC1CjB,GAAG,CAACmB,gBAAgB,CAAC,OAAO,EAAEE,eAAe,CAAC;MAC9C,OAAO,MAAM;QACXrB,GAAG,CAACoB,mBAAmB,CAAC,OAAO,EAAEC,eAAe,CAAC;QACjD;QACAV,iBAAiB,CAACM,OAAO,GAAG,KAAK;MACnC,CAAC;IACH;IACA,OAAOF,SAAS;EAClB,CAAC,EAAE,CAACR,MAAM,EAAEc,eAAe,CAAC,CAAC;EAC7B,OAAO,CAACT,OAAO,EAAEgB,eAAe,EAAEA,eAAe,CAAC;AACpD;AACA,MAAME,yBAAyB,GAAG,aAAa7E,KAAK,CAAC8E,UAAU,CAAC,CAACrC,KAAK,EAAEsC,GAAG,KAAK;EAC9E,MAAM;MACFC,cAAc;MACdC,eAAe;MACf1D,UAAU,EAAE2D,YAAY;MACxBC,QAAQ;MACRC,cAAc;MACdC,YAAY;MACZC,YAAY;MACZC;MACA;MACA;IACF,CAAC,GAAG9C,KAAK;IACT+C,KAAK,GAAG1F,6BAA6B,CAAC2C,KAAK,EAAE1C,SAAS,CAAC;EACzD,MAAMwB,UAAU,GAAG1B,QAAQ,CAAC,CAAC,CAAC,EAAEqF,YAAY,EAAE;IAC5CxC,SAAS,EAAEuC;EACb,CAAC,CAAC;EACF,MAAMQ,UAAU,GAAGxF,YAAY,CAAC;IAC9ByF,WAAW,EAAEV,cAAc;IAC3BW,iBAAiB,EAAEP,cAAc;IACjCQ,eAAe,EAAE;MACfC,QAAQ,EAAE,CAAC,CAAC;MACZC,SAAS,EAAE,CAAC;MACZf;IACF,CAAC;IACDgB,SAAS,EAAEV,YAAY;IACvB9D;EACF,CAAC,CAAC;EACF,OAAO,aAAaF,IAAI,CAAC2D,cAAc,EAAEnF,QAAQ,CAAC,CAAC,CAAC,EAAE2F,KAAK,EAAEC,UAAU,EAAE;IACvEO,OAAO,EAAElD,KAAK,IAAI;MAChBwC,YAAY,CAACxC,KAAK,CAAC;MACnB2C,UAAU,CAACO,OAAO,GAAGlD,KAAK,CAAC;IAC7B,CAAC;IACDmD,YAAY,EAAEnD,KAAK,IAAI;MACrByC,iBAAiB,CAACzC,KAAK,CAAC;MACxB2C,UAAU,CAACQ,YAAY,GAAGnD,KAAK,CAAC;IAClC,CAAC;IACDvB,UAAU,EAAEA,UAAU;IACtB4D,QAAQ,EAAEA;EACZ,CAAC,CAAC,CAAC;AACL,CAAC,CAAC;AACF,OAAO,SAASe,aAAaA,CAACC,OAAO,EAAE;EACrC,MAAM1D,KAAK,GAAGzB,aAAa,CAAC;IAC1ByB,KAAK,EAAE0D,OAAO;IACdtE,IAAI,EAAE;EACR,CAAC,CAAC;EACF,MAAM;IACJuE,QAAQ;IACRjB,QAAQ;IACRkB,YAAY,GAAG,IAAI;IACnBC,kBAAkB;IAClBC,MAAM;IACNC,SAAS;IACTC,IAAI;IACJC,IAAI;IACJhE,SAAS;IACTjB,KAAK;IACLkF,SAAS;IACTC,gBAAgB,EAAEC;EACpB,CAAC,GAAGpE,KAAK;EACTzC,KAAK,CAAC6D,SAAS,CAAC,MAAM;IACpB,SAASiD,aAAaA,CAACC,WAAW,EAAE;MAClC,IAAIN,IAAI,IAAIM,WAAW,CAACC,GAAG,KAAK,QAAQ,EAAE;QACxCR,SAAS,CAAC,CAAC;MACb;IACF;IACAvC,QAAQ,CAACC,gBAAgB,CAAC,SAAS,EAAE4C,aAAa,CAAC;IACnD,OAAO,MAAM;MACX7C,QAAQ,CAACE,mBAAmB,CAAC,SAAS,EAAE2C,aAAa,CAAC;IACxD,CAAC;EACH,CAAC,EAAE,CAACN,SAAS,EAAEC,IAAI,CAAC,CAAC;EACrB,MAAMQ,qBAAqB,GAAGjH,KAAK,CAACyD,MAAM,CAAC,IAAI,CAAC;EAChDzD,KAAK,CAAC6D,SAAS,CAAC,MAAM;IACpB,IAAI6C,IAAI,KAAK,SAAS,IAAIJ,kBAAkB,IAAI,CAACA,kBAAkB,CAAC,CAAC,EAAE;MACrE;IACF;IACA,IAAIG,IAAI,EAAE;MACRQ,qBAAqB,CAACjD,OAAO,GAAG9C,gBAAgB,CAAC+C,QAAQ,CAAC;IAC5D,CAAC,MAAM,IAAIgD,qBAAqB,CAACjD,OAAO,IAAIiD,qBAAqB,CAACjD,OAAO,YAAYkD,WAAW,EAAE;MAChG;MACA;MACAC,UAAU,CAAC,MAAM;QACf,IAAIF,qBAAqB,CAACjD,OAAO,YAAYkD,WAAW,EAAE;UACxDD,qBAAqB,CAACjD,OAAO,CAACoD,KAAK,CAAC,CAAC;QACvC;MACF,CAAC,CAAC;IACJ;EACF,CAAC,EAAE,CAACX,IAAI,EAAEC,IAAI,EAAEJ,kBAAkB,CAAC,CAAC;EACpC,MAAM,CAACe,YAAY,EAAE/B,YAAY,EAAEC,iBAAiB,CAAC,GAAGlC,oBAAoB,CAACoD,IAAI,EAAEF,MAAM,IAAIC,SAAS,CAAC;EACvG,MAAMc,QAAQ,GAAGtH,KAAK,CAACyD,MAAM,CAAC,IAAI,CAAC;EACnC,MAAM8D,SAAS,GAAG/G,UAAU,CAAC8G,QAAQ,EAAEjB,YAAY,CAAC;EACpD,MAAMmB,cAAc,GAAGhH,UAAU,CAAC+G,SAAS,EAAEF,YAAY,CAAC;EAC1D,MAAM9F,UAAU,GAAGkB,KAAK;EACxB,MAAMjB,OAAO,GAAGF,iBAAiB,CAACC,UAAU,CAAC;EAC7C,MAAMkG,uBAAuB,GAAGtG,0BAA0B,CAAC,CAAC;EAC5D,MAAMyF,gBAAgB,GAAGC,kBAAkB,IAAIY,uBAAuB;EACtE,MAAMX,aAAa,GAAGhE,KAAK,IAAI;IAC7B,IAAIA,KAAK,CAACkE,GAAG,KAAK,QAAQ,EAAE;MAC1B;MACAlE,KAAK,CAAC4E,eAAe,CAAC,CAAC;MACvBlB,SAAS,CAAC,CAAC;IACb;EACF,CAAC;EACD,MAAMmB,UAAU,GAAGlG,KAAK,EAAEmG,iBAAiB,IAAIhB,gBAAgB,GAAGzG,IAAI,GAAGD,IAAI;EAC7E,MAAM2H,SAAS,GAAGpG,KAAK,EAAEqG,gBAAgB,IAAIxH,aAAa;EAC1D,MAAMyH,KAAK,GAAGtG,KAAK,EAAEuG,YAAY,IAAI3F,kBAAkB;EACvD,MAAM4F,MAAM,GAAGxG,KAAK,EAAEyG,MAAM,IAAItG,iBAAiB;EACjD,MAAMuG,WAAW,GAAGlI,YAAY,CAAC;IAC/ByF,WAAW,EAAEuC,MAAM;IACnBtC,iBAAiB,EAAEgB,SAAS,EAAEuB,MAAM;IACpCtC,eAAe,EAAE;MACfwC,UAAU,EAAE,IAAI;MAChB1B,IAAI;MACJD,IAAI;MACJL,QAAQ;MACR1D,SAAS;MACT2F,SAAS,EAAEvB;IACb,CAAC;IACDf,SAAS,EAAEvE,OAAO,CAACE,IAAI;IACvBH,UAAU,EAAEkB;EACd,CAAC,CAAC;EACF,OAAO,aAAapB,IAAI,CAAC4G,MAAM,EAAEpI,QAAQ,CAAC,CAAC,CAAC,EAAEsI,WAAW,EAAE;IACzDhD,QAAQ,EAAEA,CAAC;MACTmD,eAAe;MACf5F,SAAS,EAAEuC;IACb,CAAC,KAAK,aAAa5D,IAAI,CAACwG,SAAS,EAAEhI,QAAQ,CAAC;MAC1C4G,IAAI,EAAEA,IAAI;MACV8B,gBAAgB,EAAE;MAClB;MACA;MACA;MAAA;;MAEAC,mBAAmB,EAAE,IAAI;MACzBC,mBAAmB,EAAE/B,IAAI,KAAK,SAAS;MACvCgC,SAAS,EAAEA,CAAA,KAAM;IACnB,CAAC,EAAE/B,SAAS,EAAEmB,gBAAgB,EAAE;MAC9B3C,QAAQ,EAAE,aAAa9D,IAAI,CAACsG,UAAU,EAAE9H,QAAQ,CAAC,CAAC,CAAC,EAAEyI,eAAe,EAAE3B,SAAS,EAAEiB,iBAAiB,EAAE;QAClGzC,QAAQ,EAAE,aAAa9D,IAAI,CAACwD,yBAAyB,EAAE;UACrDG,cAAc,EAAE+C,KAAK;UACrBxG,UAAU,EAAEA,UAAU;UACtB0D,eAAe,EAAEA,eAAe;UAChCF,GAAG,EAAEyC,cAAc;UACnBlC,YAAY,EAAEA,YAAY;UAC1BC,iBAAiB,EAAEA,iBAAiB;UACpCF,YAAY,EAAE7D,OAAO,CAACG,KAAK;UAC3ByD,cAAc,EAAEuB,SAAS,EAAEqB,YAAY;UACvC7C,QAAQ,EAAEA;QACZ,CAAC;MACH,CAAC,CAAC;IACJ,CAAC,CAAC;EACJ,CAAC,CAAC,CAAC;AACL","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}